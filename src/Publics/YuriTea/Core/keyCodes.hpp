#pragma once
#include "YuriTea/Core/base.hpp"

namespace YuriTea {

// 与sdl2对应的键值

namespace Key {

#define SCANCODE_MASK (1 << 30) // 1 << 30
#define SCANCODE_TO_KEYCODE(X)                                                 \
  (X |                                                                         \
   SCANCODE_MASK) // 作用是将SDL_SCANCODE转换为SDL_Keycode，即将SDL_SCANCODE的最高位设置为2

enum KeyCode : uint32 {
  // from SDL_keycode.h
  YRT_UNKNOWN = 0, // 未知

  YRT_RETURN = '\r',
  YRT_ESCAPE = '\x1B',
  YRT_BACKSPACE = '\b',
  YRT_TAB = '\t',
  YRT_SPACE = ' ',
  YRT_EXCLAIM = '!',
  YRT_QUOTEDBL = '"',
  YRT_HASH = '#',
  YRT_PERCENT = '%',
  YRT_DOLLAR = '$',
  YRT_AMPERSAND = '&',
  YRT_QUOTE = '\'',
  YRT_LEFTPAREN = '(',
  YRT_RIGHTPAREN = ')',
  YRT_ASTERISK = '*',
  YRT_PLUS = '+',
  YRT_COMMA = ',',
  YRT_MINUS = '-',
  YRT_PERIOD = '.',
  YRT_SLASH = '/',
  YRT_D0 = '0',
  YRT_D1 = '1',
  YRT_D2 = '2',
  YRT_D3 = '3',
  YRT_D4 = '4',
  YRT_D5 = '5',
  YRT_D6 = '6',
  YRT_D7 = '7',
  YRT_D8 = '8',
  YRT_D9 = '9',
  YRT_COLON = ':',
  YRT_SEMICOLON = ';',
  YRT_LESS = '<',
  YRT_EQUALS = '=',
  YRT_GREATER = '>',
  YRT_QUESTION = '?',
  YRT_AT = '@',

  /*
    Skip uppercase letters
    跳过大写字母
  */

  YRT_LEFTBRACKET = '[',
  YRT_BACKSLASH = '\\',
  YRT_RIGHTBRACKET = ']',
  YRT_CARET = '^',
  YRT_UNDERSCORE = '_',
  YRT_BACKQUOTE = '`',
  YRT_a = 'a',
  YRT_b = 'b',
  YRT_c = 'c',
  YRT_d = 'd',
  YRT_e = 'e',
  YRT_f = 'f',
  YRT_g = 'g',
  YRT_h = 'h',
  YRT_i = 'i',
  YRT_j = 'j',
  YRT_k = 'k',
  YRT_l = 'l',
  YRT_m = 'm',
  YRT_n = 'n',
  YRT_o = 'o',
  YRT_p = 'p',
  YRT_q = 'q',
  YRT_r = 'r',
  YRT_s = 's',
  YRT_t = 't',
  YRT_u = 'u',
  YRT_v = 'v',
  YRT_w = 'w',
  YRT_x = 'x',
  YRT_y = 'y',
  YRT_z = 'z',

  YRT_CAPSLOCK = SCANCODE_TO_KEYCODE(SDL_SCANCODE_CAPSLOCK), // 大写锁定

  YRT_F1 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F1),
  YRT_F2 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F2),
  YRT_F3 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F3),
  YRT_F4 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F4),
  YRT_F5 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F5),
  YRT_F6 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F6),
  YRT_F7 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F7),
  YRT_F8 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F8),
  YRT_F9 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F9),
  YRT_F10 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F10),
  YRT_F11 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F11),
  YRT_F12 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F12),

  YRT_PRINTSCREEN = SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRINTSCREEN), // 打印屏幕
  YRT_SCROLLLOCK = SCANCODE_TO_KEYCODE(SDL_SCANCODE_SCROLLLOCK), // 滚动锁定
  YRT_PAUSE = SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAUSE),           // 暂停
  YRT_INSERT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_INSERT),         // 插入
  YRT_HOME = SCANCODE_TO_KEYCODE(SDL_SCANCODE_HOME),             // 主页
  YRT_PAGEUP = SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEUP),         // 上翻页
  YRT_DELETE = '\x7F',                                           // 删除
  YRT_END = SCANCODE_TO_KEYCODE(SDL_SCANCODE_END),               // 结尾
  YRT_PAGEDOWN = SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEDOWN),     // 下翻页
  YRT_RIGHT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_RIGHT),           // 右
  YRT_LEFT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_LEFT),             // 左
  YRT_DOWN = SCANCODE_TO_KEYCODE(SDL_SCANCODE_DOWN),             // 下
  YRT_UP = SCANCODE_TO_KEYCODE(SDL_SCANCODE_UP),                 // 上

  YRT_NUMLOCKCLEAR =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_NUMLOCKCLEAR), // 数字锁定清除
  YRT_KP_DIVIDE = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DIVIDE), // 数字键盘除号
  YRT_KP_MULTIPLY =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MULTIPLY), // 数字键盘乘号
  YRT_KP_MINUS = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MINUS), // 数字键盘减号
  YRT_KP_PLUS = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUS), // 数字键盘加号
  YRT_KP_ENTER = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_ENTER), // 数字键盘回车
  YRT_KP_1 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_1),         // 数字键盘1
  YRT_KP_2 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_2),         // 数字键盘2
  YRT_KP_3 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_3),         // 数字键盘3
  YRT_KP_4 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_4),         // 数字键盘4
  YRT_KP_5 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_5),         // 数字键盘5
  YRT_KP_6 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_6),         // 数字键盘6
  YRT_KP_7 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_7),         // 数字键盘7
  YRT_KP_8 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_8),         // 数字键盘8
  YRT_KP_9 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_9),         // 数字键盘9
  YRT_KP_0 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_0),         // 数字键盘0
  YRT_KP_PERIOD = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERIOD), // 数字键盘句号

  YRT_APPLICATION = SCANCODE_TO_KEYCODE(SDL_SCANCODE_APPLICATION), // 应用程序
  YRT_POWER = SCANCODE_TO_KEYCODE(SDL_SCANCODE_POWER),             // 电源
  YRT_KP_EQUALS = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALS), // 数字键盘等号
  YRT_F13 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F13),
  YRT_F14 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F14),
  YRT_F15 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F15),
  YRT_F16 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F16),
  YRT_F17 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F17),
  YRT_F18 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F18),
  YRT_F19 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F19),
  YRT_F20 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F20),
  YRT_F21 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F21),
  YRT_F22 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F22),
  YRT_F23 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F23),
  YRT_F24 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_F24),
  YRT_EXECUTE = SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXECUTE),       // 执行
  YRT_HELP = SCANCODE_TO_KEYCODE(SDL_SCANCODE_HELP),             // 帮助
  YRT_MENU = SCANCODE_TO_KEYCODE(SDL_SCANCODE_MENU),             // 菜单
  YRT_SELECT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_SELECT),         // 选择
  YRT_STOP = SCANCODE_TO_KEYCODE(SDL_SCANCODE_STOP),             // 停止
  YRT_AGAIN = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AGAIN),           // 再次
  YRT_UNDO = SCANCODE_TO_KEYCODE(SDL_SCANCODE_UNDO),             // 撤销
  YRT_CUT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_CUT),               // 剪切
  YRT_COPY = SCANCODE_TO_KEYCODE(SDL_SCANCODE_COPY),             // 复制
  YRT_PASTE = SCANCODE_TO_KEYCODE(SDL_SCANCODE_PASTE),           // 粘贴
  YRT_FIND = SCANCODE_TO_KEYCODE(SDL_SCANCODE_FIND),             // 查找
  YRT_MUTE = SCANCODE_TO_KEYCODE(SDL_SCANCODE_MUTE),             // 静音
  YRT_VOLUMEUP = SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEUP),     // 音量增加
  YRT_VOLUMEDOWN = SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEDOWN), // 音量减少
  YRT_KP_COMMA = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COMMA), // 数字键盘逗号
  YRT_KP_EQUALSAS400 =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALSAS400), // 数字键盘等号AS400

  YRT_ALTERASE = SCANCODE_TO_KEYCODE(SDL_SCANCODE_ALTERASE),     // 删除
  YRT_SYSREQ = SCANCODE_TO_KEYCODE(SDL_SCANCODE_SYSREQ),         // 系统请求
  YRT_CANCEL = SCANCODE_TO_KEYCODE(SDL_SCANCODE_CANCEL),         // 取消
  YRT_CLEAR = SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEAR),           // 清除
  YRT_PRIOR = SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRIOR),           // 优先
  YRT_RETURN2 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_RETURN2),       // 返回2
  YRT_SEPARATOR = SCANCODE_TO_KEYCODE(SDL_SCANCODE_SEPARATOR),   // 分隔符
  YRT_OUT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_OUT),               // 输出
  YRT_OPER = SCANCODE_TO_KEYCODE(SDL_SCANCODE_OPER),             // 操作
  YRT_CLEARAGAIN = SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEARAGAIN), // 再次清除
  YRT_CRSEL = SCANCODE_TO_KEYCODE(SDL_SCANCODE_CRSEL),           // CRSEL
  YRT_EXSEL = SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXSEL),           // EXSEL

  YRT_KP_00 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_00),   // 数字键盘00
  YRT_KP_000 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_000), // 数字键盘000
  YRT_THOUSANDSSEPARATOR =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_THOUSANDSSEPARATOR), // 千位分隔符
  YRT_DECIMALSEPARATOR =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_DECIMALSEPARATOR), // 小数分隔符
  YRT_CURRENCYUNIT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYUNIT), // 货币单位
  YRT_CURRENCYSUBUNIT =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYSUBUNIT), // 货币子单位
  YRT_KP_LEFTPAREN =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTPAREN), // 数字键盘左括号
  YRT_KP_RIGHTPAREN =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTPAREN), // 数字键盘右括号
  YRT_KP_LEFTBRACE =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTBRACE), // 数字键盘左大括号
  YRT_KP_RIGHTBRACE =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTBRACE), // 数字键盘右大括号
  YRT_KP_TAB = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_TAB), // 数字键盘制表符
  YRT_KP_BACKSPACE =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BACKSPACE),    // 数字键盘退格
  YRT_KP_A = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_A),     // 数字键盘A
  YRT_KP_B = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_B),     // 数字键盘B
  YRT_KP_C = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_C),     // 数字键盘C
  YRT_KP_D = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_D),     // 数字键盘D
  YRT_KP_E = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_E),     // 数字键盘E
  YRT_KP_F = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_F),     // 数字键盘F
  YRT_KP_XOR = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_XOR), // 数字键盘异或
  YRT_KP_POWER = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_POWER), // 数字键盘幂
  YRT_KP_PERCENT =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERCENT), // 数字键盘百分号
  YRT_KP_LESS = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LESS), // 数字键盘小于号
  YRT_KP_GREATER =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_GREATER), // 数字键盘大于号
  YRT_KP_AMPERSAND =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AMPERSAND), // 数字键盘与
  YRT_KP_DBLAMPERSAND =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLAMPERSAND), // 数字键盘双与
  YRT_KP_VERTICALBAR =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_VERTICALBAR), // 数字键盘竖线
  YRT_KP_DBLVERTICALBAR =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLVERTICALBAR), // 数字键盘双竖线
  YRT_KP_COLON = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COLON), // 数字键盘冒号
  YRT_KP_HASH = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HASH), // 数字键盘井号
  YRT_KP_SPACE = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_SPACE), // 数字键盘空格
  YRT_KP_AT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AT),       // 数字键盘@
  YRT_KP_EXCLAM = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EXCLAM), // 数字键盘感叹号
  YRT_KP_MEMSTORE =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSTORE), // 数字键盘存储
  YRT_KP_MEMRECALL =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMRECALL), // 数字键盘回忆
  YRT_KP_MEMCLEAR =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMCLEAR), // 数字键盘清除
  YRT_KP_MEMADD = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMADD), // 数字键盘加法
  YRT_KP_MEMSUBTRACT =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSUBTRACT), // 数字键盘减法
  YRT_KP_MEMMULTIPLY =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMMULTIPLY), // 数字键盘乘法
  YRT_KP_MEMDIVIDE =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMDIVIDE), // 数字键盘除法
  YRT_KP_PLUSMINUS =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUSMINUS), // 数字键盘正负号
  YRT_KP_CLEAR = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEAR), // 数字键盘清除
  YRT_KP_CLEARENTRY =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEARENTRY), // 数字键盘清除输入
  YRT_KP_BINARY = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BINARY), // 二进制
  YRT_KP_OCTAL = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_OCTAL),   // 八进制
  YRT_KP_DECIMAL =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DECIMAL), // 数字键盘十进制
  YRT_KP_HEXADECIMAL =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HEXADECIMAL), // 十六进制

  YRT_LCTRL = SCANCODE_TO_KEYCODE(SDL_SCANCODE_LCTRL),   // 左CTRL
  YRT_LSHIFT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_LSHIFT), // 左SHIFT
  YRT_LALT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_LALT),     // 左ALT
  YRT_LGUI = SCANCODE_TO_KEYCODE(SDL_SCANCODE_LGUI),     // 左GUI
  YRT_RCTRL = SCANCODE_TO_KEYCODE(SDL_SCANCODE_RCTRL),   // 右CTRL
  YRT_RSHIFT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_RSHIFT), // 右SHIFT
  YRT_RALT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_RALT),     // 右ALT
  YRT_RGUI = SCANCODE_TO_KEYCODE(SDL_SCANCODE_RGUI),     // 右GUI

  YRT_MODE = SCANCODE_TO_KEYCODE(SDL_SCANCODE_MODE), // 模式

  YRT_AUDIONEXT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIONEXT),     // 下一个
  YRT_AUDIOPREV = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPREV),     // 上一个
  YRT_AUDIOSTOP = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOSTOP),     // 停止
  YRT_AUDIOPLAY = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPLAY),     // 播放
  YRT_AUDIOMUTE = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOMUTE),     // 静音
  YRT_MEDIASELECT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIASELECT), // 媒体选择
  YRT_WWW = SCANCODE_TO_KEYCODE(SDL_SCANCODE_WWW),                 // 网页
  YRT_MAIL = SCANCODE_TO_KEYCODE(SDL_SCANCODE_MAIL),               // 邮件
  YRT_CALCULATOR = SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALCULATOR),   // 计算器
  YRT_COMPUTER = SCANCODE_TO_KEYCODE(SDL_SCANCODE_COMPUTER),       // 计算机
  YRT_AC_SEARCH = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SEARCH),     // 搜索
  YRT_AC_HOME = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_HOME),         // 主页
  YRT_AC_BACK = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BACK),         // 返回
  YRT_AC_FORWARD = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_FORWARD),   // 前进
  YRT_AC_STOP = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_STOP),         // 停止
  YRT_AC_REFRESH = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_REFRESH),   // 刷新
  YRT_AC_BOOKMARKS = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BOOKMARKS), // 书签

  YRT_BRIGHTNESSDOWN =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSDOWN), // 亮度减少
  YRT_BRIGHTNESSUP = SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSUP), // 亮度增加
  YRT_DISPLAYSWITCH =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_DISPLAYSWITCH), // 显示切换
  YRT_KBDILLUMTOGGLE =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMTOGGLE), // 键盘亮度切换
  YRT_KBDILLUMDOWN =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMDOWN), // 键盘亮度减少
  YRT_KBDILLUMUP = SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMUP), // 键盘亮度增加
  YRT_EJECT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_EJECT),           // 弹出
  YRT_SLEEP = SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP),           // 休眠
  YRT_APP1 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP1), // 应用程序1
  YRT_APP2 = SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP2), // 应用程序2

  YRT_AUDIOREWIND = SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOREWIND), // 倒带
  YRT_AUDIOFASTFORWARD =
      SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOFASTFORWARD), // 快进

  YRT_SOFTLEFT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTLEFT),   // 软左
  YRT_SOFTRIGHT = SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTRIGHT), // 软右
  YRT_CALL = SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALL),           // 通话
  YRT_ENDCALL = SCANCODE_TO_KEYCODE(SDL_SCANCODE_ENDCALL)      // 结束通话

};

enum KeyMod : uint32 {
  // 无修饰键
  YRT_KMOD_NONE = 0x0000,
  // 左Shift键
  YRT_KMOD_LSHIFT = 0x0001,
  // 右Shift键
  YRT_KMOD_RSHIFT = 0x0002,
  // 左Ctrl键
  YRT_KMOD_LCTRL = 0x0040,
  // 右Ctrl键
  YRT_KMOD_RCTRL = 0x0080,
  // 左Alt键
  YRT_KMOD_LALT = 0x0100,
  // 右Alt键
  YRT_KMOD_RALT = 0x0200,
  // 左GUI键（Windows键或Command键）
  YRT_KMOD_LGUI = 0x0400,
  // 右GUI键（Windows键或Command键）
  YRT_KMOD_RGUI = 0x0800,
  // 数字锁定键
  YRT_KMOD_NUM = 0x1000,
  // 大写锁定键
  YRT_KMOD_CAPS = 0x2000,
  // 模式键
  YRT_KMOD_MODE = 0x4000,
  // 滚动锁定键
  YRT_KMOD_SCROLL = 0x8000,

  // Ctrl键（包括左Ctrl和右Ctrl）
  YRT_KMOD_CTRL = YRT_KMOD_LCTRL | YRT_KMOD_RCTRL,

  // Shift键（包括左Shift和右Shift）
  YRT_KMOD_SHIFT = YRT_KMOD_LSHIFT | YRT_KMOD_RSHIFT,
  // Alt键（包括左Alt和右Alt）
  YRT_KMOD_ALT = YRT_KMOD_LALT | YRT_KMOD_RALT,
  // GUI键（包括左GUI和右GUI，如Windows键或Command键）
  YRT_KMOD_GUI = YRT_KMOD_LGUI | YRT_KMOD_RGUI,

  // 保留值，为了与SDL 2.0.0源代码兼容
  YRT_KMOD_RESERVED = YRT_KMOD_SCROLL

};

} // namespace Key

} // namespace YuriTea
